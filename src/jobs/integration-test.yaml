description: |
  Runs an integration test by creating a KIND cluster and executing it as a Go
  test.

  Uses the machine executor and replaces the Go version with a version
  controlled by us since the preinstalled Go is very outdated.

  See [docs](docs/integration_test.md) for more details.
parameters:
  apptestctl-version:
    default: "v0.13.0"
    description: "apptestctl version for bootstrapping app platform."
    type: string
  env-file:
    default: ""
    description: "File of environment variables to set."
    type: string
  helm-version:
    default: "v3.6.3"
    description: "Helm version to install."
    type: string
  install-app-platform:
    type: boolean
    default: false
    description: |
      When true the apptestctl bootstrap command is used to add support for
      installing components in tests via app CRs.
  kind-config:
    default: ""
    description: "Path to kind config file."
    type: string
  kubernetes-version:
    default: "v1.21.1"
    description: "Kubernetes version for kind cluster."
    type: string
  setup-script:
    default: ""
    description: "Path to setup script with commands to execute before each test."
    type: string
  test-dir:
    description: "Tested package directory."
    type: string
  test-timeout:
    default: "20m"
    description: "If a tests runs longer than this it will panic."
    type: string
  resource_class:
    default: "medium"
    description: |
        Configures amount CPU and RAM for the job. See
        https://circleci.com/docs/2.0/configuration-reference/#machine-executor-linux
        for details.
    type: "enum"
    enum: ["medium", "large", "xlarge", "2xlarge"]
executor: "machine"
machine:
  image: ubuntu-2004:202010-01
resource_class: "<< parameters.resource_class >>"
steps:
  - checkout
  - attach_workspace:
      at: .
  - machine-install-go
  - integration-test-install-tools:
      apptestctl-version:  << parameters.apptestctl-version >>
      helm-version:  << parameters.helm-version >>
      kubernetes-version:  << parameters.kubernetes-version >>
  - integration-test-create-cluster:
      kind-config: << parameters.kind-config >>
      kubernetes-version:  << parameters.kubernetes-version >>
  - integration-test-install-app-platform:
      install-app-platform:  << parameters.install-app-platform >>
  - integration-test-setup:
      setup-script: << parameters.setup-script >>
  - integration-test-go-test:
      env-file: << parameters.env-file >>
      test-dir: << parameters.test-dir >>
      test-timeout: << parameters.test-timeout >>
  - integration-test-export-logs
