parameters:
  app_name:
    type: "string"
  app_catalog:
    type: "string"
  app_collection_repo:
    type: "string"
  docker_username_envar:
    type: "string"
  docker_password_envar:
    type: "string"
steps:
  - run:
      name: get project version
      command: |
        architect project version > version
        echo -n "<<parameters.app_name>>-$(cat version)" | head -c 53 > cr-name
  - run:
      name: generate app CR
      command: |
        echo -n "${<<parameters.docker_password_envar>>}" | docker login --username "${<<parameters.docker_username_envar>>}" --password-stdin quay.io
        docker run quay.io/giantswarm/opsctl:6e555aa40eb39a2cf9c58f5f7a7859b6e185763f \
          create appcr \
            --name $(cat cr-name) \
            --app-name <<parameters.app_name>> \
            --app-version $(cat version) \
            --catalog <<parameters.app_catalog>> \
            -o yaml \
          > app.yaml
  - run:
      name: update <<parameters.app_collection_repo>>
      command: |
        git clone \
          -q \
          --depth=1 \
          --single-branch \
          -b test-gauss \
          git@github.com:giantswarm/<<parameters.app_collection_repo>>.git \
          app-collection
        mkdir -p app-collection/helm/<<parameters.app_collection_repo>>-chart/templates
        mv -n app.yaml app-collection/helm/<<parameters.app_collection_repo>>-chart/templates/<<parameters.app_name>>-$(cat version).yaml
        cd app-collection
        git add helm/<<parameters.app_collection_repo>>-chart/templates/<<parameters.app_name>>-$(cat ../version).yaml
        git commit -m "add $(git status --porcelain | cut -c4-)"
        git push
