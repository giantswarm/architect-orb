description: >
  Generates and adds an App CR to an app-collection.
  Note: version will be detected automatically by architect.
parameters:
  app_name:
    type: "string"
  app_namespace:
    type: "string"
  app_catalog:
    type: "string"
  app_collection_repo:
    type: "string"
  disable_force_upgrade:
    type: "boolean"
steps:
  - run:
      name: "architect/push-to-app-collection: Generate version"
      command: |
        architect project version | tee .app_version
  - run:
      name: "architect/push-to-app-collection: Generate Application CR"
      command: |
        architect create argoapp \
          --name="<<parameters.app_name>>" \
          --app-name="<<parameters.app_name>>" \
          --app-version="$(cat .app_version)" \
          --app-destination-namespace="<<parameters.app_namespace>>" \
          --app-catalog="<<parameters.app_catalog>>" \
          --config-ref-from-chart="helm/<<parameters.app_name>>/Chart.yaml" \
          --disable-force-upgrade=<<parameters.disable_force_upgrade>> \
          -o yaml | tee .app.yaml
  - run:
      name: "architect/push-to-app-collection: Generate Flux Generator"
      command: |
        architect create fluxgenerator \
          --name="<<parameters.app_name>>" \
          --app-name="<<parameters.app_name>>" \
          --app-version="$(cat .app_version)" \
          --app-destination-namespace="<<parameters.app_namespace>>" \
          --app-catalog="<<parameters.app_catalog>>" \
          --config-ref-from-chart="helm/<<parameters.app_name>>/Chart.yaml" \
          --disable-force-upgrade=<<parameters.disable_force_upgrade>> \
          -o yaml | tee .fluxgenerator.yaml
  - run:
      name: "architect/push-to-app-collection: Clone app collection repo"
      command: |
        git clone -q --depth=1 --single-branch git@github.com:giantswarm/<<parameters.app_collection_repo>>.git .app-collection
  - run:
      name: "architect/push-to-app-collection: Add resources to the collection repo"
      command: |
        mkdir -p .app-collection/manifests
        mkdir -p .app-collection/flux-manifests
        mv -f .app.yaml .app-collection/manifests/<<parameters.app_name>>.yaml
        mv -f .fluxgenerator.yaml .app-collection/flux-manifests/<<parameters.app_name>>.yaml
        architect create kustomization --dir .app-collection/flux-manifests | tee .app-collection/flux-manifests/kustomization.yaml
        git -C .app-collection add manifests/<<parameters.app_name>>.yaml
        git -C .app-collection add flux-manifests/<<parameters.app_name>>.yaml
        git -C .app-collection add flux-manifests/kustomization.yaml
  - run:
      name: "architect/push-to-app-collection: Commit changes to the app collection repo"
      command: |
        git -C .app-collection commit -m "update <<parameters.app_name>> to $(cat .app_version)"
  - run:
      name: "architect/push-to-app-collection: Push changes to the app collection repo"
      command: |
          cd .app-collection

          ret=1
          tries=4
          for i in $(seq 1 $tries) ; do
            echo "====> Attempt $i: Running: git pull --rebase"
            git pull --rebase

            echo "====> Attempt $i: Running: git push"
            set +e
            git push
            ret=$?
            set -e

            [[ $ret -eq 0 ]] && exit $ret

            sleep 5
          done

          echo "Giving up after $tries failures." >&2
          echo "Error pushing changes. See known errors in:" >&2
          echo "https://github.com/giantswarm/architect-orb/blob/master/README.md#push-to-app-collection" >&2

          exit $ret
  - run:
      name: "architect/push-to-app-collection: Cleanup"
      command: |
        rm .app_version
