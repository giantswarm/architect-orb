# This command checks whether the tag represents a dev or release build
# and then decides whether a push should happen.
# The :latest tag is also pushed if conditions match.

parameters:
  image_sha256:
    type: string
  registry:
    type: string
  image:
    type: string
  tag:
    type: string
  password_envar:
    type: env_var_name
  username_envar:
    type: env_var_name
  push_dev_builds:
    description: "Normally only release builds are pushed. If this is true, also dev builds are pushed to the selected registry."
    type: boolean
    default: false
  tag-latest-branch:
    type: string
  tag-suffix:
    type: string
    default: ""
  build-context:
    type: string
    default: "."
  dockerfile:
    type: string
    default: "./Dockerfile"
steps:
    - run:
        name: Push to registry <<parameters.registry>>
        command: |
          BUILD_TYPE=dev
          MATCH=$(echo "<< parameters.tag >>" | grep -E "[a-h0-9]{40}")
          if [[ -z "$MATCH" ]]; then
            # Release build
            BUILD_TYPE=release
          fi

          if [ "$BUILD_TYPE" = "dev" ]; then
            if [ "<<parameters.push_dev_builds>>" = "false" ]; then
              echo "This is a dev build, but dev builds are not wanted for this step based on the 'push_dev_builds' parameter. Doing nothing."
              # Exit without failing
              circleci-agent step halt
            fi
          fi

          echo "Tagging image with SHA256 <<parameters.image_sha256>> as <<parameters.registry>>/<<parameters.image>>:<<parameters.tag>>"
          docker tag <<parameters.image_sha256>> "<<parameters.registry>>/<<parameters.image>>:<<parameters.tag>>"

          echo "Authenticating for registry <<parameters.registry>> as user ${<<parameters.username_envar>>}"
          docker login <<parameters.registry>> --username "${<<parameters.username_envar>>}" --password "${<<parameters.password_envar>>}"

          echo "Pushing the image"
          docker push "<<parameters.registry>>/<<parameters.image>>:<<parameters.tag>>" || docker push "<<parameters.registry>>/<<parameters.image>>:<<parameters.tag>>" || docker push "<<parameters.registry>>/<<parameters.image>>:<<parameters.tag>>"

          if [ "$CIRCLE_BRANCH" = "<<parameters.tag-latest-branch>>" ]; then
            echo "Also push the image with :latest<<parameters.tag-suffix>> tag (only for branch <<parameters.tag-latest-branch>>)"
            docker tag <<parameters.image_sha256>> "<<parameters.registry>>/<<parameters.image>>:latest"
            docker push "<<parameters.image>>:latest<<parameters.tag-suffix>>"
          fi
